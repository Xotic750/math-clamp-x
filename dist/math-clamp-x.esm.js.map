{"version":3,"sources":["../src/math-clamp-x.js"],"names":[],"mappings":"AAAA,OAAO,QAAP,MAAqB,aAArB;;AAEA,IAAM,SAAS,GAAG,SAAS,SAAT,CAAmB,IAAnB,EAAyB;AACzC,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAD,CAAL,CAAvB;AAEA,MAAM,MAAM,GACV,IAAI,CAAC,MAAL,GAAc,CAAd,GACI;AACE,IAAA,GAAG,EAAE,MADP;AAEE,IAAA,GAAG,EAAE;AAFP,GADJ,GAKI;AACE,IAAA,GAAG,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAD,CAAL,CADf;AAEE,IAAA,GAAG,EAAE;AAFP,GANN;;AAWA,MAAI,MAAM,CAAC,GAAP,GAAa,MAAM,CAAC,GAAxB,EAA6B;AAC3B,UAAM,IAAI,UAAJ,CAAe,+BAAf,CAAN;AACD;;AAED,SAAO,MAAP;AACD,CAnBD,C,CAqBA;AACA;;AACA;;;;;;;;;AASA;;;AACA,IAAM,KAAK,GAAG,SAAS,KAAT,CAAe,KAAf,EAAsB;AAClC,MAAM,MAAM,GAAG,QAAQ,CAAC,KAAD,CAAvB;;AAEA,MAAI,SAAS,CAAC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,WAAO,MAAP;AACD;AAED;;;AAPkC,mBAQf,SAAS,CAAC,SAAD,CARM;AAAA,MAQ3B,GAR2B,cAQ3B,GAR2B;AAAA,MAQtB,GARsB,cAQtB,GARsB;;AAUlC,MAAI,GAAG,GAAG,GAAV,EAAe;AACb,UAAM,IAAI,UAAJ,CAAe,+BAAf,CAAN;AACD;;AAED,MAAI,MAAM,GAAG,GAAb,EAAkB;AAChB,WAAO,GAAP;AACD;;AAED,MAAI,MAAM,GAAG,GAAb,EAAkB;AAChB,WAAO,GAAP;AACD;;AAED,SAAO,MAAP;AACD,CAvBD;;AAyBA,eAAe,KAAf","file":"math-clamp-x.esm.js","sourcesContent":["import toNumber from 'to-number-x';\n\nconst getMaxMin = function getMaxMin(args) {\n  const minVal = toNumber(args[1]);\n\n  const result =\n    args.length < 3\n      ? {\n          max: minVal,\n          min: 0,\n        }\n      : {\n          max: toNumber(args[2]),\n          min: minVal,\n        };\n\n  if (result.min > result.max) {\n    throw new RangeError('\"min\" must be less than \"max\"');\n  }\n\n  return result;\n};\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * This method clamp a number to min and max limits inclusive.\n *\n * @param {number} value - The number to be clamped.\n * @param {number} [min=0] - The minimum number.\n * @param {number} max - The maximum number.\n * @throws {RangeError} If min > max.\n * @returns {number} The clamped number.\n */\n// eslint-enable jsdoc/check-param-names\nconst clamp = function clamp(value) {\n  const number = toNumber(value);\n\n  if (arguments.length < 2) {\n    return number;\n  }\n\n  /* eslint-disable-next-line prefer-rest-params */\n  const {max, min} = getMaxMin(arguments);\n\n  if (min > max) {\n    throw new RangeError('\"min\" must be less than \"max\"');\n  }\n\n  if (number < min) {\n    return min;\n  }\n\n  if (number > max) {\n    return max;\n  }\n\n  return number;\n};\n\nexport default clamp;\n"]}